# -*- coding: utf-8 -*-
"""Customer_Lifetime_Value_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q3DvUAGQfOpE3Lf08HOajiGTlQ2BnhvF

# Customer Lifetime Value Analysis

## Objective:
-> Make visualization for distribution of customer acquisition cost.

-> Create visualization for revenue generated by the customers.

-> Compare the acquisition cost by various channels.

-> Calculate the total revenue generated by each channel.

-> Calculate the return of investment by each channel.
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("/content/drive/MyDrive/data/customer_lifetime_value_analysis/customer_data.csv")

df.head(5)

df.tail(5)

df.shape

df.isnull().sum() # for series

df.isna().sum() # for dataframe

df.describe()

channel_type = df["channel"].unique()
channel_type

channel_type_number = df["channel"].nunique()
channel_type_number

channel_counts = df['channel'].value_counts()
channel_counts

channel_counts.index
channel_counts.values

plt.figure(figsize=(12,8))

ax = sns.barplot(x = channel_counts.index, y = channel_counts.values, width = 0.6)

for bars in ax.containers:
  ax.bar_label(bars)

plt.xlabel("Channel Type")
plt.ylabel("Channel Values")
plt.title("Distribution of Channel ", fontweight = 'bold')

cost_count = df['cost'].value_counts()
cost_count

plt.figure(figsize=(12, 8))

ax = sns.barplot(x =cost_count.index, y = cost_count.value_counts(), width = 0.6)

for bars in ax.containers:
  ax.bar_label(bars)

plt.xlabel('Cost')
plt.ylabel('Count')
plt.title('Distribution of Cost', fontweight = 'bold')

"""### Customer Acquisition cost"""

#plt.figure(figsize=(8,5))

ax = sns.histplot(df['cost'], kde=False, bins=20 )

plt.ylabel('Frequency')
plt.title("Distribution of Customer Acquisition cost", fontweight='bold')

"""### Revenue Generation"""

plt.figure(figsize=(8,6))

ax = sns.histplot(df['revenue'], kde=False)
plt.title('Distribution of revenue generated', fontweight='bold')

"""### Cost of Acquisition of channels."""

df.head(5)

cost_channel = df.groupby('channel')['cost'].mean()
cost_channel

ax = sns.barplot(x = cost_channel.index, y= cost_channel.values, )
plt.ylabel("Mean")
plt.title(" Cost of Acquisition of channels.", fontweight = 'bold')

for bars in ax.containers:
  ax.bar_label(bars)

"""### Revenue generated by channels.

"""

revenue_channel = df.groupby('channel')['revenue'].mean()
revenue_channel

ax = sns.barplot(x = revenue_channel.index, y = revenue_channel.values, )

for bars in ax.containers:
  ax.bar_label(bars)

plt.ylabel("Revenue")

"""### Customer conversion rate

"""

df.head(3)

conversion = df.groupby('channel')['conversion_rate'].mean()
conversion

ax = sns.barplot(x = conversion.index, y = conversion.values, )

for bars in ax.containers:
  ax.bar_label(bars)

plt.ylabel("conversion_rate")

"""### ROI

"""

df.head(3)

df['ROI'] = 0

df.head(3)

df['ROI'] = df['revenue'] / df['cost']
df.head(3)

roi = df.groupby('channel')['ROI'].mean()
roi

ax = sns.barplot(x = roi.index, y = roi.values, )

for bars in ax.containers:
  ax.bar_label(bars)

plt.ylabel("roi")

